<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 			column="prod_no" 			jdbcType="NUMERIC"/>
		<result property="prodName"		column="prod_name" 		jdbcType="VARCHAR" />
		<result property="prodDetail" 		column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 		column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 			column="price" 				jdbcType="INTEGER" />
		<result property="fileName" 		column="image_file" 			jdbcType="VARCHAR" />
		<result property="regDate" 			column="reg_date" 			jdbcType="DATE" />
		<result property="rowNum" 		column="row_seq" 			jdbcType="NUMERIC"/>
		<result property="proTranCode" column="TRAN_STATUS_CODE" jdbcType="CHAR"/>
		<result property="productQty" 		column="product_quantity" 		jdbcType="INTEGER"/>
	</resultMap>
	
	
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product( prod_no , prod_name , prod_detail , manufacture_day , price, image_file, reg_date, product_quantity) 
		VALUES	 (	seq_product_prod_no.nextval , #{prodName} , #{prodDetail:VARCHAR} ,  #{manuDate:VARCHAR} , #{price:INTEGER} , 
							#{fileName:VARCHAR} , SYSDATE, #{productQty:INTEGER})
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		prod_no , prod_name , image_file , prod_detail ,  manufacture_day ,  price , reg_date, product_quantity 		
		FROM product
		WHERE prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name 	= #{prodName:VARCHAR} ,
			prod_detail	= #{prodDetail:VARCHAR},
			manufacture_day = #{manuDate:VARCHAR} ,
			price = #{price:INTEGER}, 
			image_file = #{fileName:VARCHAR},
			product_quantity = #{productQty:INTEGER}
	   	</set>
	   	WHERE prod_no = #{prodNo:NUMERIC}
	 </update>
	
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.prod_no, p.prod_name, p.price, p.reg_date, t.tran_status_code
										FROM product p
										LEFT OUTER JOIN transaction t
										ON p.prod_no = t.prod_no 
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				p.prod_name LIKE '%' || #{searchKeyword} || '%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				p.price &lt;= #{searchKeyword}
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				p.price &gt;= #{searchKeyword}
													</if>
												</where>
											</if>
											ORDER BY prod_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.prod_no, p.prod_name, p.price, p.reg_date, t.tran_status_code
						FROM product p
						LEFT OUTER JOIN transaction t
						ON p.prod_no = t.prod_no 
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
					 				p.prod_name LIKE '%' || #{searchKeyword} || '%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
					 				p.price &lt;= #{searchKeyword}
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
					 				p.price &gt;= #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
</mapper>